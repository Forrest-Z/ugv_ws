<launch>
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

    <remap from="cloud_in" to="/rslidar_points"/>
    <rosparam>
        target_frame: rslidar # Leave disabled to output scan in pointcloud frame
        transform_tolerance: 0.01
        min_height: -0.2
        max_height: 1

        angle_min: -3.1415926 # -M_PI/2
        angle_max: 3.1415926 # M_PI/2
        angle_increment: 0.00330 # M_PI/360.0
        scan_time: 0.1
        range_min: 0.2
        range_max: 8
        use_inf: true
        inf_epsilon: 1.0

        # Concurrency level, affects number of pointclouds queued for processing and number of threads used
        # 0 : Detect number of cores
        # 1 : Single threaded
        # 2->inf : Parallelism level
        concurrency_level: 1
    </rosparam>
  </node>


  <node pkg="tf" type="static_transform_publisher" name="localiztion" args="0 0 0 0 0 0 /map /odom 100" />

    <node pkg="tf" type="static_transform_publisher" name="rslidar" args="0.1 0 0.7 0 0 0 /base_link /rslidar 100" />

  <node pkg="tf" type="static_transform_publisher" name="base_laser" args="0.1 0 0.7 0 0 0 /base_link /base_laser 100" />

    <node name="speed_manager" pkg="mission_control" type="speed_manager" output="screen" respawn="true">
      <rosparam>
        max_rotation: 0.6
        max_speed: 0.8
        vehicle_radius: 0.4
        lookahead_time: 2
        safe_zone: 8
        force_constant_x: 1
        force_constant_y: 10

        max_height: 1
        min_height: -0.2
        max_range: 8
        min_range: 0.2
        oscillation: 0.1

        one_hand: false

        goal_a: [1.5,28]
        goal_b: [61,121]

      </rosparam>  
      
  </node>

  <node name="navi_manager" pkg="mission_control" type="navi_manager" output="screen" respawn="true">
      <param name="use_sim"  value="true"/>
      <param name="junction_file"  value="$(find param)/map/junction.txt"/>
  </node>


    <node pkg="map_server" type="map_server" name="map_server" args="$(find param)/map/map_2.yaml">
    <remap from="map" to="nav_map"/>
  </node>

<!--launch move_base-->
  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="base_link"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="odom_topic" default="odom" />
  <arg name="laser_topic" default="scan" />
  <arg name="map_topic" default="nav_map" />

  <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
    <rosparam file="$(find param)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find param)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find param)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find param)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find param)/config/teb_local_planner_params.yaml" command="load" />
    <rosparam file="$(find param)/config/move_base_params.yaml" command="load" />
    <rosparam file="$(find param)/config/global_planner_params.yaml" command="load" />

 
    <!-- reset frame_id parameters using user input data -->
    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/> 
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>

    <param name="base_global_planner" value = "global_planner/GlobalPlanner"/>
    <param name="base_local_planner" value = "teb_local_planner/TebLocalPlannerROS"/> 
    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="$(arg laser_topic)"/>
    <remap from="map" to="$(arg map_topic)"/>

  </node>


</launch>